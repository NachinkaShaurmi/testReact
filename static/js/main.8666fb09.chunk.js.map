{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","onClick","push","TodoForm","props","useState","title","setTitle","onChange","event","target","value","onKeyPress","key","onAdd","type","id","placeholder","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","join","checked","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8666fb09.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nexport const Navbar: React.FunctionComponent = () => (\r\n  <nav>\r\n    <div className=\"nav-wrapper blue darken-2 px1\">\r\n      <a href=\"/\" className=\"brand-logo\">\r\n        ToDo List\r\n      </a>\r\n      <ul className=\"right hide-on-med-and-down\">\r\n        <li>\r\n          <NavLink to=\"/\">Список дел</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">Информация</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const AboutPage: React.FC = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      <h1>Страница информации</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas cum,\r\n        eius delectus dolorum nesciunt eaque accusantium error quia\r\n        exercitationem atque?\r\n      </p>\r\n      <button className=\"btn\" onClick={() => history.push('/')}>Обратно к списку дел</button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\ninterface TodoFormProps {\r\n  onAdd(title: string):void\r\n}\r\n\r\nexport const TodoForm: React.FunctionComponent<TodoFormProps> = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  const keyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      props.onAdd(title);\r\n      setTitle('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-field mt2\">\r\n      <input\r\n        onChange={changeHandler} \r\n        onKeyPress={keyPressHandler}\r\n        value={title}\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"Покормить кота\"\r\n      />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n        Введите задачу\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ITodo } from \"../interfeces\";\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[];\r\n  onToggle(id: number): void;\r\n  onRemove(id: number): void;\r\n};\r\n\r\nexport const TodoList: React.FunctionComponent<TodoListProps> = ({\r\n  todos,\r\n  onToggle,\r\n  onRemove\r\n}) => {\r\n  if (todos.length === 0) {\r\n    return <h4 className=\"center\">Пока дел нет</h4>\r\n  }\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n        const classes = [\"todo\"];\r\n        if (todo.completed) {\r\n          classes.push(\"completed\");\r\n        }\r\n        return (\r\n          <li className={classes.join(\" \")} key={todo.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => onToggle(todo.id)}\r\n              />\r\n              <span>{todo.title}</span>\r\n              <i\r\n                className=\"material-icons red-text\"\r\n                onClick={() => onRemove(todo.id)}\r\n              >\r\n                delete\r\n              </i>\r\n            </label>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { TodoForm } from \"../components/TodoForm\";\r\nimport { TodoList } from \"../components/TodoList\";\r\nimport { ITodo } from \"../interfeces\";\r\n\r\nexport const TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n    setTodos(saved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const addHandler = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      title: title,\r\n      id: Date.now(),\r\n      completed: false,\r\n    };\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n\r\n  const toggleHandler = (id: number) => {\r\n    setTodos(prev => prev.map( todo => {\r\n      if(todo.id === id) {\r\n        todo.completed = !todo.completed\r\n      }\r\n      return todo\r\n    }))\r\n  };\r\n\r\n  const removeHandler = (id: number) => {\r\n    setTodos(prev => prev.filter(todo => todo.id !== id))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TodoForm onAdd={addHandler} />\r\n        <TodoList\r\n          todos={todos}\r\n          onToggle={toggleHandler}\r\n          onRemove={removeHandler}\r\n        />\r\n    </>\r\n  )\r\n}","import React from \"react\";\nimport {Switch, BrowserRouter, Route} from 'react-router-dom';\nimport { Navbar } from \"./components/Navbar\";\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { TodosPage } from \"./pages/TodosPage\";\n\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={TodosPage} path=\"/\" exact />\n          <Route component={AboutPage} path=\"/about\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}